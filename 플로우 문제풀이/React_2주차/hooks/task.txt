📍Basic
    [문제1]
        useState 및 styled-components에 관련한 문제입니다.
        아래 문제를 통해 어떠한 경우 state를 사용해야하는지 고민하여 풀어보세요

    1-1 )
        문제1-1은 input의 value가 placeholder의 값과 같아졌다면
        초록색 글씨로 올바르게 입력하셨습니다가 노출됩니다.

        만약 입력하지 않았다면 올바르게 글을 작성해주세요라는 문구가
        붉은색 글씨로 노출됩니다

        - onChange로 입력된 값 가져오기 > placeholder의 값
        - useEffect 사용해서 값을 검사한 후, 결과에 따라 문구 변경시키기
        - 삼항연산자 사용해서 S.Message 부분에 보일 값을 두 개 설정해두기
        - 동일한지 여부를 나타내는 ref 변수를 하나 만들어서 해당 값에 따라 보일 문구와 색상 반영하기

        - placeholder의 값 가져오는 방법?

    1-2 )
        문제1-2는 보이기 버튼을 누른다면

        button 내부의 텍스트는 숨기기로 바뀌고
        아래 보이는 p태그가 보여야합니다.

        반대로 숨기기 텍스트로 바뀐 button을 누르면
        p태그는 보이지 않아야합니다

        - 기본값이 true인 state 하나 만들기
        - 버튼이 클릭될 떄마다 해당 state가 바뀌게 하기
        - 보이기, 숨기기는 ref 값으로 담아서 state가 true면 숨기기, false면 보이기로 바뀌게 하기
        - ref.current === "숨기기" && <p>이 문구는 보이기 상태일 때만 볼 수 있습니다.</p>

    [문제2]
        useRef에 관련한 문제입니다.

    2-1)
        추가 버튼을 누르면 input에 있던 value는 배열 arr에 추가됩니다.
        그러나, 추가 버튼을 누를 때마다 강제 렌더링 상태가 무조건 업데이트 됩니다.

        이러한 상황에서 제출버튼을 누르면

        지금까지 추가하였던 목록 배열(arr)이 
        <ul>의 li의 항목으로 추가되어야합니다.

        만약 제출되었을 때 아무런 항목이 없다면
        <p>제출된 목록이 없습니다</p>이 노출되어야하며

        제출된 항목이 있다면
        <ul>만 노출되어야 합니다

        이를 useRef의 특성을 고려하여 풀이해보세요 :)

        1. 추가 버튼을 누르면 forceRender 상태 변경 (ul 부분을 업데이트하진 않음)
        2. 제출 버튼을 누르면 
           isSubmit state가 true로 바뀌고
           submitted contents state에 arr.current의 값이 추가되고 이 배열의 각 요소들은 ul의 li로 mapping 된다.
           위의 과정을 완료한 후 isSubmit state를 다시 false로 바꾼다.
        3. 만약 isSubmit state가 true이 되었을 때 arr.current.length의 값이 0이라면, 
           ul이 보이는 대신 <p>제출된 목록이 없습니다.</p>를 노출시킨다.


    2-2)
        문제 2-2는 변경 버튼을 클릭하면
        p태그의 색상이 다른 색상으로 변경됩니다.
        
        이는 state를 사용하는 것이 가장 올바른 방법이지만
        state를 사용할 수 없는 어쩔 수 없는 상황에 놓여있습니다.

        따라서 useRef를 사용하여 해당 문구의 색상을 변경해보세요 :)

        - DOM에 접근하기 위한 useRef 하나 생성 > p태그에 ref={} 속성 넣어주기
        - ref.current.style.color = "skyblue"

    [문제3]
        useEffect useState에 관련한 문제입니다.

        단체 줄넘기 대회에 출전하였습니다

        줄넘기 시작 버튼을 누르면 
        Q3components 컴포넌트가 보입니다.

        Q3components 내부에는

        해당 컴포넌트가 보이기 시작한 시점부터
        2초마다 줄넘기 횟수가 1회 씩 증가하는 비즈니스 로직이 존재합니다

        또한, 이러한 줄넘기 횟수 증가는 q3.js(index)에서도 확인할 수 있도록
        <p> 줄넘기 횟수 : 0 </p> 에 횟수로 표시됩니다

        줄넘기 중지 버튼을 누르면
        해당 컴포넌트는 보이지 않아야하며, 줄넘기 횟수도 더이상 증가해서는 안됩니다.
        또한, 줄넘기 횟수는 0으로 고정되어야합니다.

📍 State
    [문제1]
        state를 다루기 위한 기초 문제입니다.
        음악 목록 10가지의 mock data가 있습니다.

        아래에 추가버튼을 눌러 목록에 리스트를 추가하고 
        삭제 버튼을 눌렀을 때 데이터가 삭제될 수 있도록 해주세요..?

    [문제2]
    2-1)
        아래 작성된 state의 mock data를 활용하여
        댓글 목록을 화면에 랜더링 해보세요 :)
        Components는 src/components/state/comment.js를 활용하세요
        
    2-2)
        댓글 작성 수정 삭제 기능을 구현해보세요 :)
            1. 댓글 작성 기능
            2. 댓글 수정 기능
                수정 버튼에 boolean state를 주어서 input창이 true이면 보이고, false면 보이지 않도록 하기
                input 창이 닫히기 전에 입력받은 값으로 업데이트 
            3. 댓글 삭제 기능 ( 본인이 작성한 댓글만 삭제할 수 있습니다, myComment 활용 )

    [문제3]
        심화문제 입니다
    
        아래는 가상의 커머스 사이트 mock data입니다

        ⭐요구 사항⭐

        1. 
            구매후기 및 상세 정보를 제외한 데이터의 모든 정보는 화면에 노출되어야 합니다.
            단, 가격표는 3자리마다 ,를 작성해야합니다.

        2. 
            해당 상품을 클릭하면 상세 페이지로 이동합니다.
    
        3.
            상세페이지 주소에는 클릭한 상품의 상품번호가 노출되어야 합니다
            해당 router (주소설정)은 제가 모두 app.js에 해두었습니다

            ex) /state/detail/301389

        해당 상품번호를 주소에서부터 받아와야합니다.
        받아온 데이터를 토대로 useEffect를 활용하여 
        products 데이터에서 올바른 데이터를 찾아내어 해당 데이터만 따로 state로 관리합니다

        💡주의 사항💡
        본래 로직이라한다면 주소의 상품번호를 백엔드에게 전송하여 데이터를 받아오는 로직이었을겁니다
        그러나 백엔드가 없기에 최대한 유사하게 페이지를 구사해보았습니다

        상세페이지는 pages/Detail.js

        4.
            상세 페이지에서는 페이지의 상세 내용을 확인할 수 있으며 구매평을 추가할 수 있습니다 
            (수정 및 삭제는 state2에서 풀이하였으므로 구현하지 않아도 괜찮습니다)